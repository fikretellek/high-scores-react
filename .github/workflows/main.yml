name: Deploy to EC2
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    - name: Install dependencies
      run: npm install
    - name: Build project
      run: npm run build
    - name: Zip the build artifacts
      run: zip -r build.zip dist/
    - name: Upload to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
      run: |
        aws s3 cp build.zip s3://${S3_BUCKET}/build.zip
        
    - name: Create SSH key file
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/mykey.pem
        chmod 600 /tmp/mykey.pem

    - name: Debugging AWS CLI
      run: |
        aws --version
        aws configure list
        aws sts get-caller-identity

    - name: Debugging Environment Variables
      run: |
        echo "AWS_REGION: ${{ secrets.AWS_REGION_EC }}"
        echo "S3_BUCKET: ${{ secrets.S3_BUCKET }}"
        echo "EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}"
        echo "EC2_USER: ${{ secrets.EC2_USER }}"

    - name: Connect to EC2 and deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION_EC }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
        EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        PUBLIC_IP=$(aws ec2 describe-instances --instance-ids $EC2_INSTANCE_ID --query "Reservations[0].Instances[0].PublicIpAddress" --output text --region $AWS_REGION)
        echo "EC2 Public IP: $PUBLIC_IP"
        ssh -o "StrictHostKeyChecking=no" -i /tmp/mykey.pem $EC2_USER@$PUBLIC_IP << 'EOF'
          sudo yum update -y
          sudo yum install -y httpd unzip
          sudo systemctl start httpd
          sudo systemctl enable httpd
          aws s3 cp s3://${S3_BUCKET}/build.zip build.zip
          sudo mkdir -p /var/www/html/dist
          sudo unzip -o build.zip -d /var/www/html/dist/
          sudo chmod -R 755 /var/www/html/dist
          sudo systemctl restart httpd
